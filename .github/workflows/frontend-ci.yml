name: Frontend CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'adam-counter-frontend/**'
      - 'oee-app/**'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'adam-counter-frontend/**'
      - 'oee-app/**'

env:
  NODE_VERSION: '20.x'
  PNPM_VERSION: '9.15.0'

jobs:
  counter-frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./adam-counter-frontend

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}

    - name: Setup pnpm
      uses: pnpm/action-setup@v4
      with:
        version: ${{ env.PNPM_VERSION }}

    - name: Get pnpm store directory
      id: pnpm-cache
      shell: bash
      run: |
        echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

    - name: Cache pnpm dependencies
      uses: actions/cache@v4
      with:
        path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-

    - name: Install dependencies
      run: pnpm install --frozen-lockfile

    - name: Run TypeScript type checking
      run: pnpm run type-check

    - name: Run ESLint
      run: pnpm run lint

    - name: Run Prettier check
      run: pnpm run format:check

    - name: Run unit tests
      run: pnpm run test:coverage

    - name: Build application
      run: pnpm run build

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: counter-frontend-build
        path: ./adam-counter-frontend/.next/

    - name: Upload test coverage
      uses: codecov/codecov-action@v4
      with:
        directory: ./adam-counter-frontend/coverage
        flags: frontend-counter
        verbose: true

  oee-frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./oee-app/oee-interface

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}

    - name: Setup pnpm
      uses: pnpm/action-setup@v4
      with:
        version: ${{ env.PNPM_VERSION }}

    - name: Get pnpm store directory
      id: pnpm-cache
      shell: bash
      run: |
        echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

    - name: Cache pnpm dependencies
      uses: actions/cache@v4
      with:
        path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
        key: ${{ runner.os }}-pnpm-store-oee-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-oee-

    - name: Install dependencies
      run: pnpm install --frozen-lockfile

    - name: Run TypeScript type checking
      run: pnpm run type-check

    - name: Run ESLint
      run: pnpm run lint

    - name: Run Prettier check
      run: pnpm run format:check

    - name: Run unit tests
      run: pnpm run test:coverage

    - name: Build application
      run: pnpm run build

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: oee-frontend-build
        path: ./oee-app/oee-interface/.next/

    - name: Upload test coverage
      uses: codecov/codecov-action@v4
      with:
        directory: ./oee-app/oee-interface/coverage
        flags: frontend-oee
        verbose: true

  e2e-tests:
    runs-on: ubuntu-latest
    needs: [counter-frontend, oee-frontend]
    if: github.event_name == 'pull_request'

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}

    - name: Setup pnpm
      uses: pnpm/action-setup@v4
      with:
        version: ${{ env.PNPM_VERSION }}

    - name: Install Playwright
      run: |
        cd adam-counter-frontend
        pnpm install --frozen-lockfile
        pnpm exec playwright install --with-deps

    - name: Run Playwright E2E tests
      run: |
        cd adam-counter-frontend
        pnpm run test:e2e

    - name: Upload Playwright report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report
        path: ./adam-counter-frontend/playwright-report/

  security-audit:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app: [adam-counter-frontend, oee-app/oee-interface]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}

    - name: Setup pnpm
      uses: pnpm/action-setup@v4
      with:
        version: ${{ env.PNPM_VERSION }}

    - name: Install dependencies
      run: |
        cd ${{ matrix.app }}
        pnpm install --frozen-lockfile

    - name: Run security audit
      run: |
        cd ${{ matrix.app }}
        pnpm audit

    - name: Check for known vulnerabilities
      run: |
        cd ${{ matrix.app }}
        pnpm audit --audit-level moderate