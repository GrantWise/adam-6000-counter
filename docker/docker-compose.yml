services:
  # TimescaleDB - Time series database for counter data (Performance Optimized)
  timescaledb:
    image: timescale/timescaledb:2.17.2-pg17
    container_name: adam-timescaledb
    restart: unless-stopped
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_DB=adam_counters
      - POSTGRES_USER=adam_user
      - POSTGRES_PASSWORD=adam_password
      - TIMESCALEDB_TELEMETRY=off
      # Performance optimization settings
      - POSTGRES_SHARED_PRELOAD_LIBRARIES=timescaledb
      - POSTGRES_MAX_CONNECTIONS=200
      - POSTGRES_SHARED_BUFFERS=256MB
      - POSTGRES_EFFECTIVE_CACHE_SIZE=1GB
      - POSTGRES_WAL_BUFFERS=16MB
      - POSTGRES_CHECKPOINT_COMPLETION_TARGET=0.9
      - POSTGRES_RANDOM_PAGE_COST=1.1
    volumes:
      - timescaledb_data:/var/lib/postgresql/data
      - ./timescaledb/init:/docker-entrypoint-initdb.d
    networks:
      - adam_network
    # Performance resource limits
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 1G
          cpus: '0.5'
    # Optimize for SSD/fast storage
    tmpfs:
      - /tmp:size=100M,noexec,nosuid,nodev
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U adam_user -d adam_counters"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Grafana - Visualization dashboard
  grafana:
    image: grafana/grafana:12.0.2
    container_name: adam-grafana
    restart: unless-stopped
    ports:
      - "3002:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_INSTALL_PLUGINS=
      # Increase series limits for industrial data
      - GF_DATAPROXY_MAX_IDLE_CONNECTIONS=1000
      - GF_QUERY_MAX_SERIES=10000
      - GF_ALERTING_MAX_ANNOTATIONS_TO_KEEP=500000
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    depends_on:
      - timescaledb
    networks:
      - adam_network
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  # ADAM Counter Logger - C# application (Performance Optimized)
  adam-logger:
    build:
      context: ..
      dockerfile: docker/csharp/Dockerfile
    container_name: adam-counter-logger
    restart: unless-stopped
    network_mode: host
    environment:
      # Configuration selection
      - DEMO_MODE=${DEMO_MODE:-false}
      - LOG_LEVEL=${LOG_LEVEL:-Information}
      # Performance optimization settings
      - DOTNET_GCServer=1
      - DOTNET_GCConcurrent=1
      - DOTNET_GCRetainVM=1
      - ASPNETCORE_ENVIRONMENT=Production
    volumes:
      - ./config:/app/config
      - ./logs:/app/logs
    # Performance resource limits and optimization
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 512M
          cpus: '0.25'
    # Memory optimization for continuous operation
    tmpfs:
      - /tmp:size=50M,noexec,nosuid,nodev
    healthcheck:
      test: ["CMD-SHELL", "pgrep -f dotnet || exit 1"]
      interval: 60s
      timeout: 30s
      retries: 3
      start_period: 60s

  # Prometheus - Metrics collection and alerting (New)
  prometheus:
    image: prom/prometheus:v2.47.0
    container_name: adam-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=30d'
      - '--storage.tsdb.retention.size=10GB'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
    volumes:
      - prometheus_data:/prometheus
      - ./prometheus:/etc/prometheus
    networks:
      - adam_network
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 512M
          cpus: '0.25'
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9090/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Node Exporter - System metrics (New)
  node-exporter:
    image: prom/node-exporter:v1.6.1
    container_name: adam-node-exporter
    restart: unless-stopped
    ports:
      - "9100:9100"
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    networks:
      - adam_network
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: '0.1'


# Persistent volumes for data storage
volumes:
  timescaledb_data:
    driver: local
  grafana_data:
    driver: local
  prometheus_data:
    driver: local

# Internal network for service communication
networks:
  adam_network:
    driver: bridge