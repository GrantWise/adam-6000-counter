// Industrial.IoT.Platform.Storage - Entity Framework Model Snapshot
// Auto-generated model snapshot for Industrial IoT Platform database following existing ADAM logger patterns

using Industrial.IoT.Platform.Storage.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;

#nullable disable

namespace Industrial.IoT.Platform.Storage.Migrations;

/// <summary>
/// Entity Framework model snapshot for Industrial IoT Platform
/// Auto-generated by Entity Framework migrations
/// </summary>
[DbContext(typeof(IndustrialIoTDbContext))]
partial class IndustrialIoTDbContextModelSnapshot : ModelSnapshot
{
    protected override void BuildModel(ModelBuilder modelBuilder)
    {
#pragma warning disable 612, 618
        modelBuilder
            .HasAnnotation("ProductVersion", "8.0.0")
            .HasAnnotation("Relational:MaxIdentifierLength", 128);

        SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

        modelBuilder.Entity("Industrial.IoT.Platform.Storage.Data.Entities.DeviceConfigurationEntity", b =>
        {
            b.Property<long>("Id")
                .ValueGeneratedOnAdd()
                .HasColumnType("bigint");

            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

            b.Property<int>("AcquisitionIntervalMs")
                .ValueGeneratedOnAdd()
                .HasColumnType("int")
                .HasDefaultValue(1000);

            b.Property<int?>("BaudRate")
                .HasColumnType("int");

            b.Property<string>("ChannelConfigurationsJson")
                .HasColumnType("nvarchar(max)");

            b.Property<string>("ConfigurationJson")
                .HasColumnType("nvarchar(max)");

            b.Property<int>("ConnectionTimeoutMs")
                .ValueGeneratedOnAdd()
                .HasColumnType("int")
                .HasDefaultValue(10000);

            b.Property<string>("CreatedBy")
                .HasMaxLength(100)
                .HasColumnType("nvarchar(100)");

            b.Property<DateTimeOffset>("CreatedAt")
                .ValueGeneratedOnAdd()
                .HasColumnType("datetimeoffset")
                .HasDefaultValueSql("GETUTCDATE()");

            b.Property<int?>("DataBits")
                .HasColumnType("int");

            b.Property<string>("Department")
                .HasMaxLength(100)
                .HasColumnType("nvarchar(100)");

            b.Property<string>("Description")
                .HasMaxLength(1000)
                .HasColumnType("nvarchar(1000)");

            b.Property<string>("DeviceId")
                .IsRequired()
                .HasMaxLength(50)
                .HasColumnType("nvarchar(50)");

            b.Property<string>("DeviceName")
                .IsRequired()
                .HasMaxLength(200)
                .HasColumnType("nvarchar(200)");

            b.Property<string>("DeviceType")
                .IsRequired()
                .HasMaxLength(50)
                .HasColumnType("nvarchar(50)");

            b.Property<bool>("EnableHealthMonitoring")
                .ValueGeneratedOnAdd()
                .HasColumnType("bit")
                .HasDefaultValue(true);

            b.Property<bool>("EnableStabilityMonitoring")
                .ValueGeneratedOnAdd()
                .HasColumnType("bit")
                .HasDefaultValue(true);

            b.Property<string>("EnvironmentalOptimization")
                .HasMaxLength(50)
                .HasColumnType("nvarchar(50)");

            b.Property<string>("FirmwareVersion")
                .HasMaxLength(50)
                .HasColumnType("nvarchar(50)");

            b.Property<string>("FlowControl")
                .HasMaxLength(20)
                .HasColumnType("nvarchar(20)");

            b.Property<string>("IpAddress")
                .HasMaxLength(100)
                .HasColumnType("nvarchar(100)");

            b.Property<bool>("IsActive")
                .ValueGeneratedOnAdd()
                .HasColumnType("bit")
                .HasDefaultValue(true);

            b.Property<DateTimeOffset?>("LastConnectedAt")
                .HasColumnType("datetimeoffset");

            b.Property<DateTimeOffset?>("LastDataReadAt")
                .HasColumnType("datetimeoffset");

            b.Property<string>("Location")
                .HasMaxLength(200)
                .HasColumnType("nvarchar(200)");

            b.Property<string>("Manufacturer")
                .HasMaxLength(50)
                .HasColumnType("nvarchar(50)");

            b.Property<int>("MaxRetries")
                .ValueGeneratedOnAdd()
                .HasColumnType("int")
                .HasDefaultValue(3);

            b.Property<string>("Model")
                .HasMaxLength(50)
                .HasColumnType("nvarchar(50)");

            b.Property<string>("ModifiedBy")
                .HasMaxLength(100)
                .HasColumnType("nvarchar(100)");

            b.Property<DateTimeOffset>("ModifiedAt")
                .ValueGeneratedOnAdd()
                .HasColumnType("datetimeoffset")
                .HasDefaultValueSql("GETUTCDATE()");

            b.Property<string>("Parity")
                .HasMaxLength(10)
                .HasColumnType("nvarchar(10)");

            b.Property<int?>("Port")
                .HasColumnType("int");

            b.Property<string>("ProtocolTemplate")
                .HasMaxLength(100)
                .HasColumnType("nvarchar(100)");

            b.Property<int>("ReadTimeoutMs")
                .ValueGeneratedOnAdd()
                .HasColumnType("int")
                .HasDefaultValue(5000);

            b.Property<int>("RetryDelayMs")
                .ValueGeneratedOnAdd()
                .HasColumnType("int")
                .HasDefaultValue(1000);

            b.Property<string>("SerialNumber")
                .HasMaxLength(50)
                .HasColumnType("nvarchar(50)");

            b.Property<string>("SerialPort")
                .HasMaxLength(50)
                .HasColumnType("nvarchar(50)");

            b.Property<double>("StabilityThreshold")
                .ValueGeneratedOnAdd()
                .HasColumnType("float")
                .HasDefaultValue(80.0);

            b.Property<int?>("StopBits")
                .HasColumnType("int");

            b.Property<int>("SuccessfulConnections")
                .ValueGeneratedOnAdd()
                .HasColumnType("int")
                .HasDefaultValue(0);

            b.Property<int>("SuccessfulDataReads")
                .ValueGeneratedOnAdd()
                .HasColumnType("int")
                .HasDefaultValue(0);

            b.Property<string>("TagsJson")
                .HasColumnType("nvarchar(max)");

            b.Property<int>("TotalConnections")
                .ValueGeneratedOnAdd()
                .HasColumnType("int")
                .HasDefaultValue(0);

            b.Property<int>("TotalDataReads")
                .ValueGeneratedOnAdd()
                .HasColumnType("int")
                .HasDefaultValue(0);

            b.HasKey("Id");

            b.HasIndex("DeviceId")
                .IsUnique()
                .HasDatabaseName("IX_DeviceConfigurations_DeviceId_Unique");

            b.HasIndex("DeviceType")
                .HasDatabaseName("IX_DeviceConfigurations_DeviceType");

            b.HasIndex("IsActive")
                .HasDatabaseName("IX_DeviceConfigurations_IsActive");

            b.HasIndex("IpAddress", "Port")
                .HasDatabaseName("IX_DeviceConfigurations_IpAddress_Port");

            b.HasIndex("Location", "Department")
                .HasDatabaseName("IX_DeviceConfigurations_Location_Department");

            b.ToTable("DeviceConfigurations");

            b.HasCheckConstraint("CK_DeviceConfigurations_AcquisitionIntervalMs", "[AcquisitionIntervalMs] >= 100 AND [AcquisitionIntervalMs] <= 3600000");

            b.HasCheckConstraint("CK_DeviceConfigurations_BaudRate", "[BaudRate] IS NULL OR ([BaudRate] >= 300 AND [BaudRate] <= 115200)");

            b.HasCheckConstraint("CK_DeviceConfigurations_ConnectionTimeoutMs", "[ConnectionTimeoutMs] >= 1000 AND [ConnectionTimeoutMs] <= 60000");

            b.HasCheckConstraint("CK_DeviceConfigurations_DataBits", "[DataBits] IS NULL OR ([DataBits] >= 7 AND [DataBits] <= 8)");

            b.HasCheckConstraint("CK_DeviceConfigurations_MaxRetries", "[MaxRetries] >= 0 AND [MaxRetries] <= 10");

            b.HasCheckConstraint("CK_DeviceConfigurations_Port", "[Port] IS NULL OR ([Port] >= 1 AND [Port] <= 65535)");

            b.HasCheckConstraint("CK_DeviceConfigurations_ReadTimeoutMs", "[ReadTimeoutMs] >= 100 AND [ReadTimeoutMs] <= 30000");

            b.HasCheckConstraint("CK_DeviceConfigurations_RetryDelayMs", "[RetryDelayMs] >= 100 AND [RetryDelayMs] <= 10000");

            b.HasCheckConstraint("CK_DeviceConfigurations_StabilityThreshold", "[StabilityThreshold] >= 0 AND [StabilityThreshold] <= 100");

            b.HasCheckConstraint("CK_DeviceConfigurations_StopBits", "[StopBits] IS NULL OR ([StopBits] >= 1 AND [StopBits] <= 2)");
        });

        modelBuilder.Entity("Industrial.IoT.Platform.Storage.Data.Entities.ProtocolTemplateEntity", b =>
        {
            b.Property<long>("Id")
                .ValueGeneratedOnAdd()
                .HasColumnType("bigint");

            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

            b.Property<string>("Author")
                .HasMaxLength(100)
                .HasColumnType("nvarchar(100)");

            b.Property<string>("CommandTemplatesJson")
                .IsRequired()
                .HasColumnType("nvarchar(max)");

            b.Property<string>("CommunicationSettingsJson")
                .IsRequired()
                .HasColumnType("nvarchar(max)");

            b.Property<double>("ConfidenceThreshold")
                .ValueGeneratedOnAdd()
                .HasColumnType("float")
                .HasDefaultValue(75.0);

            b.Property<string>("ConfigurationJson")
                .HasColumnType("nvarchar(max)");

            b.Property<DateTimeOffset>("CreatedAt")
                .ValueGeneratedOnAdd()
                .HasColumnType("datetimeoffset")
                .HasDefaultValueSql("GETUTCDATE()");

            b.Property<string>("Description")
                .HasMaxLength(1000)
                .HasColumnType("nvarchar(1000)");

            b.Property<string>("DisplayName")
                .IsRequired()
                .HasMaxLength(200)
                .HasColumnType("nvarchar(200)");

            b.Property<string>("EnvironmentalOptimization")
                .HasMaxLength(50)
                .HasColumnType("nvarchar(50)");

            b.Property<string>("ErrorHandlingJson")
                .HasColumnType("nvarchar(max)");

            b.Property<bool>("IsActive")
                .ValueGeneratedOnAdd()
                .HasColumnType("bit")
                .HasDefaultValue(true);

            b.Property<bool>("IsBuiltIn")
                .ValueGeneratedOnAdd()
                .HasColumnType("bit")
                .HasDefaultValue(false);

            b.Property<DateTimeOffset?>("LastUsedAt")
                .HasColumnType("datetimeoffset");

            b.Property<string>("Manufacturer")
                .IsRequired()
                .HasMaxLength(50)
                .HasColumnType("nvarchar(50)");

            b.Property<int>("MaxRetries")
                .ValueGeneratedOnAdd()
                .HasColumnType("int")
                .HasDefaultValue(3);

            b.Property<string>("Model")
                .HasMaxLength(50)
                .HasColumnType("nvarchar(50)");

            b.Property<DateTimeOffset>("ModifiedAt")
                .ValueGeneratedOnAdd()
                .HasColumnType("datetimeoffset")
                .HasDefaultValueSql("GETUTCDATE()");

            b.Property<int>("Priority")
                .ValueGeneratedOnAdd()
                .HasColumnType("int")
                .HasDefaultValue(50);

            b.Property<string>("ResponsePatternsJson")
                .IsRequired()
                .HasColumnType("nvarchar(max)");

            b.Property<double>("SuccessRate")
                .ValueGeneratedOnAdd()
                .HasColumnType("float")
                .HasDefaultValue(0.0);

            b.Property<string>("SupportedBaudRates")
                .HasMaxLength(200)
                .HasColumnType("nvarchar(200)");

            b.Property<string>("TagsJson")
                .HasColumnType("nvarchar(max)");

            b.Property<string>("TemplateName")
                .IsRequired()
                .HasMaxLength(100)
                .HasColumnType("nvarchar(100)");

            b.Property<int>("TimeoutMs")
                .ValueGeneratedOnAdd()
                .HasColumnType("int")
                .HasDefaultValue(5000);

            b.Property<int>("UsageCount")
                .ValueGeneratedOnAdd()
                .HasColumnType("int")
                .HasDefaultValue(0);

            b.Property<string>("ValidationRulesJson")
                .HasColumnType("nvarchar(max)");

            b.Property<string>("Version")
                .IsRequired()
                .ValueGeneratedOnAdd()
                .HasMaxLength(20)
                .HasColumnType("nvarchar(20)")
                .HasDefaultValue("1.0.0");

            b.HasKey("Id");

            b.HasIndex("IsActive")
                .HasDatabaseName("IX_ProtocolTemplates_IsActive");

            b.HasIndex("Priority")
                .HasDatabaseName("IX_ProtocolTemplates_Priority");

            b.HasIndex("TemplateName")
                .IsUnique()
                .HasDatabaseName("IX_ProtocolTemplates_TemplateName_Unique");

            b.HasIndex("UsageCount", "SuccessRate")
                .HasDatabaseName("IX_ProtocolTemplates_UsageCount_SuccessRate");

            b.HasIndex("Manufacturer", "Model")
                .HasDatabaseName("IX_ProtocolTemplates_Manufacturer_Model");

            b.ToTable("ProtocolTemplates");

            b.HasCheckConstraint("CK_ProtocolTemplates_ConfidenceThreshold", "[ConfidenceThreshold] >= 0 AND [ConfidenceThreshold] <= 100");

            b.HasCheckConstraint("CK_ProtocolTemplates_MaxRetries", "[MaxRetries] >= 0 AND [MaxRetries] <= 10");

            b.HasCheckConstraint("CK_ProtocolTemplates_Priority", "[Priority] >= 1 AND [Priority] <= 100");

            b.HasCheckConstraint("CK_ProtocolTemplates_SuccessRate", "[SuccessRate] >= 0 AND [SuccessRate] <= 100");

            b.HasCheckConstraint("CK_ProtocolTemplates_TimeoutMs", "[TimeoutMs] >= 100 AND [TimeoutMs] <= 30000");
        });

        modelBuilder.Entity("Industrial.IoT.Platform.Storage.Data.Entities.ScaleDataEntity", b =>
        {
            b.Property<long>("Id")
                .ValueGeneratedOnAdd()
                .HasColumnType("bigint");

            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

            b.Property<TimeSpan>("AcquisitionTime")
                .HasColumnType("time");

            b.Property<int>("Channel")
                .HasColumnType("int");

            b.Property<DateTimeOffset>("CreatedAt")
                .ValueGeneratedOnAdd()
                .HasColumnType("datetimeoffset")
                .HasDefaultValueSql("GETUTCDATE()");

            b.Property<string>("DeviceId")
                .IsRequired()
                .HasMaxLength(50)
                .HasColumnType("nvarchar(50)");

            b.Property<string>("ErrorMessage")
                .HasMaxLength(500)
                .HasColumnType("nvarchar(500)");

            b.Property<string>("Manufacturer")
                .HasMaxLength(50)
                .HasColumnType("nvarchar(50)");

            b.Property<string>("MetadataJson")
                .HasColumnType("nvarchar(max)");

            b.Property<string>("Model")
                .HasMaxLength(50)
                .HasColumnType("nvarchar(50)");

            b.Property<DateTimeOffset>("ModifiedAt")
                .ValueGeneratedOnAdd()
                .HasColumnType("datetimeoffset")
                .HasDefaultValueSql("GETUTCDATE()");

            b.Property<string>("ProtocolTemplate")
                .HasMaxLength(50)
                .HasColumnType("nvarchar(50)");

            b.Property<string>("Quality")
                .IsRequired()
                .ValueGeneratedOnAdd()
                .HasMaxLength(20)
                .HasColumnType("nvarchar(20)")
                .HasDefaultValue("Good");

            b.Property<string>("RawWeight")
                .HasMaxLength(100)
                .HasColumnType("nvarchar(100)");

            b.Property<string>("SerialNumber")
                .HasMaxLength(50)
                .HasColumnType("nvarchar(50)");

            b.Property<double?>("StabilityScore")
                .HasColumnType("float");

            b.Property<string>("Status")
                .HasMaxLength(50)
                .HasColumnType("nvarchar(50)");

            b.Property<DateTimeOffset>("Timestamp")
                .HasColumnType("datetimeoffset");

            b.Property<string>("Unit")
                .HasMaxLength(10)
                .HasColumnType("nvarchar(10)");

            b.Property<decimal>("WeightKg")
                .HasPrecision(18, 6)
                .HasColumnType("decimal(18,6)");

            b.HasKey("Id");

            b.HasIndex("Quality")
                .HasDatabaseName("IX_ScaleData_Quality");

            b.HasIndex("Timestamp")
                .HasDatabaseName("IX_ScaleData_Timestamp");

            b.HasIndex("WeightKg")
                .HasDatabaseName("IX_ScaleData_WeightKg");

            b.HasIndex("DeviceId", "Timestamp")
                .HasDatabaseName("IX_ScaleData_DeviceId_Timestamp");

            b.HasIndex("Manufacturer", "Model")
                .HasDatabaseName("IX_ScaleData_Manufacturer_Model");

            b.ToTable("ScaleData");

            b.HasCheckConstraint("CK_ScaleData_Channel", "[Channel] >= 1 AND [Channel] <= 8");

            b.HasCheckConstraint("CK_ScaleData_StabilityScore", "[StabilityScore] IS NULL OR ([StabilityScore] >= 0 AND [StabilityScore] <= 100)");
        });
#pragma warning restore 612, 618
    }
}